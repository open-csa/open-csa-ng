# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-20 15:16
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Asset Cash'), (2, 'Liability User Balance'), (3, 'Revenue Transaction Cut')])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AvailableQuantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='csa.Cart')),
            ],
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('address', models.CharField(max_length=512)),
                ('delivery_weekday', models.IntegerField()),
                ('delivery_time', models.TimeField()),
                ('delivery_duration', models.IntegerField()),
                ('orders_deadline_weekday', models.IntegerField()),
                ('orders_deadline_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LedgerEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Debit'), (2, 'Credit')])),
                ('reason', models.IntegerField(choices=[(1, 'Balance Deposit'), (4, 'Balance Withdraw'), (2, 'Transaction Cut'), (3, 'Transaction Cut Refund'), (5, 'Products Purchase'), (5, 'Products Purchase Refund')])),
                ('amount', models.PositiveIntegerField()),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csa.Account')),
            ],
            options={
                'verbose_name_plural': 'Ledger Entries',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_cut_percent', models.FloatField()),
                ('delivery_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csa.DeliveryLocation')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_stock_price', models.PositiveIntegerField()),
                ('quantity_fulfilled', models.FloatField(null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='csa.Order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starts_at', models.DateTimeField()),
                ('ends_at', models.DateTimeField()),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'No more orders'), (3, 'Finalized'), (4, 'Canceled')])),
                ('delivery_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csa.DeliveryLocation')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'Complete'), (3, 'Failed')])),
                ('method', models.IntegerField(choices=[(1, 'By hand')])),
                ('type', models.IntegerField(choices=[(1, 'Deposit'), (2, 'Widthdraw')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentByHand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='csa.Payment')),
            ],
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dummy_field', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('description', models.TextField()),
                ('unit', models.IntegerField(choices=[(1, 'Μάτσο'), (2, 'Κιλό')])),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('description', models.CharField(blank=True, max_length=512)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='csa.ProductCategory')),
            ],
            options={
                'verbose_name_plural': 'product categories',
            },
        ),
        migrations.CreateModel(
            name='ProductStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variety', models.CharField(max_length=512)),
                ('price', models.PositiveIntegerField()),
                ('min_quantity', models.FloatField(null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('is_stockable', models.BooleanField(default=False)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('description', models.TextField()),
                ('producer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='csa.Product')),
                ('supported_delivery_locations', models.ManyToManyField(to='csa.DeliveryLocation')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Balance Deposit'), (4, 'Balance Withdraw'), (2, 'Products Purchase'), (3, 'Products Purchase Refund')])),
                ('amount', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('consumer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='csa.Consumer')),
                ('producer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='csa.Producer')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='categories',
            field=models.ManyToManyField(to='csa.ProductCategory'),
        ),
        migrations.AddField(
            model_name='payment',
            name='transaction',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='csa.Transaction'),
        ),
        migrations.AddField(
            model_name='payment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='product_stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csa.ProductStock'),
        ),
        migrations.AddField(
            model_name='order',
            name='order_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csa.OrderPeriod'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ledgerentry',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csa.Transaction'),
        ),
        migrations.AddField(
            model_name='consumer',
            name='preferred_delivery_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csa.DeliveryLocation'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='product_stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csa.ProductStock'),
        ),
        migrations.AddField(
            model_name='availablequantity',
            name='product_stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_quantities', to='csa.ProductStock'),
        ),
        migrations.AlterUniqueTogether(
            name='orderperiod',
            unique_together=set([('delivery_location', 'starts_at')]),
        ),
        migrations.AlterUniqueTogether(
            name='orderitem',
            unique_together=set([('product_stock', 'order')]),
        ),
        migrations.AlterUniqueTogether(
            name='ledgerentry',
            unique_together=set([('transaction', 'account')]),
        ),
        migrations.AlterUniqueTogether(
            name='cartitem',
            unique_together=set([('product_stock', 'cart')]),
        ),
        migrations.AlterUniqueTogether(
            name='availablequantity',
            unique_together=set([('product_stock', 'quantity')]),
        ),
        migrations.AlterUniqueTogether(
            name='account',
            unique_together=set([('type', 'user')]),
        ),
    ]
